//Crivellaro 2022

#include <WiFi.h>
#include <PubSubClient.h>
WiFiClient espClient;
PubSubClient client(espClient);
//WiFi
const char* ssid = "SSID_Rete_WiFI";
const char* password = "Password_Rete_Wifi";

const char *ssid_recovery = "Esp_WiFi";
const char *password_recovery = "P@ssw0rd";

//IP Broker
const char* mqtt_server = "10.0.2.43";
//NomeClient
const char* clientName = "ESP32_n1";
const int pinLed1 = 0;
const int pinLed2 = 1;
long lastMsg = 0;
String msgIn;
int value = 0;
void setup()
{
  pinMode(pinLed1, OUTPUT);
  pinMode(pinLed2, OUTPUT);
  Serial.begin(115200);
  setup_wifi();
  client.setServer(mqtt_server, 1883);
  client.setCallback(callback);
}
void setup_wifi()
{
  delay(10);
  Serial.println();
  Serial.print("Connesso a : ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi connesso");
  Serial.println("IP : ");
  Serial.println(WiFi.localIP());

  WiFi.softAP(ssid_recovery, password_recovery);

  IPAddress myIP = WiFi.softAPIP();
  Serial.print("AP : ");
  Serial.println(myIP);
  
}
void callback(char* topic, byte* payload, unsigned int length) {
  msgIn = "";
  Serial.print("Messaggio arrivato [");
  Serial.print(topic);
  Serial.print("] ");
  for (int i = 0; i < length; i++) {
    msgIn = msgIn + ((char)payload[i]);
  }
  Serial.println(msgIn);
  ControlsByMessage((String)topic, msgIn);
}
void ControlsByMessage(String tpc, String msg)
{
    Serial.println(tpc);
    Serial.println(msg);
  if (tpc == "L1")
  {  
    if (msg == "ON")
    {
      digitalWrite(0, HIGH);
    }
    else if (msg == "OFF")
    {
      digitalWrite(0, LOW);
    }
  }
  if (tpc == "L2")
  {
    if (msg == "ON")
    {
      digitalWrite(1, HIGH);
    }
    else if (msg == "OFF")
    {
      digitalWrite(1, LOW);
    }
  }
}
void reconnect() {
  // Loop fino alla riconnessione
  while (!client.connected()) {
    Serial.print("Connetto a MQTT...");
    // tenta la connessione
    if (client.connect(clientName)) {
      Serial.println("connected");
      // sottoscrizione ai Topic
      client.subscribe("L1");
      client.subscribe("L2");
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" connessione in 5 secondi");
      // attendi 5 secondi tra i tentativi di riconnessione
      delay(5000);
    }
  }
}
void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();
}
